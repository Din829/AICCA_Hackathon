{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(python test:*)",
      "Bash(find:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(pip install:*)",
      "Bash(python3:*)",
      "Bash(rm:*)",
      "Bash(python -m mypy:*)",
      "Bash(mkdir:*)",
      "Bash(grep:*)",
      "Bash(pip show:*)",
      "WebFetch(domain:discuss.ai.google.dev)",
      "WebFetch(domain:ai.google.dev)",
      "Bash(python:*)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:github.com)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "WebFetch(domain:medium.com)",
      "Bash(pip3 show:*)",
      "WebFetch(domain:googleapis.github.io)",
      "Bash(/mnt/c/Users/q9951/anaconda3/python.exe test_config_priority.py)",
      "Bash(/mnt/c/Users/q9951/anaconda3/python.exe test_cache_with_system.py)",
      "Bash(/mnt/c/Users/q9951/anaconda3/Scripts/pip.exe show google-genai)",
      "Bash(/mnt/c/Users/q9951/anaconda3/python.exe -m dbrheo_cli.main --debug --no-color)",
      "Bash(/mnt/c/Users/q9951/anaconda3/python.exe src/dbrheo_cli/main.py --help)",
      "Bash(/mnt/c/Users/q9951/anaconda3/Scripts/pip.exe install -e packages/core)",
      "Bash(/mnt/c/Users/q9951/anaconda3/Scripts/pip.exe install -e packages/cli)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Read(/C:\\tmp/**)",
      "Read(/C:\\Users\\q9951\\AppData\\Local\\Temp\\aicca_uploads/**)",
      "Bash(dir:*)",
      "Read(/C:\\Users\\q9951\\AppData\\Local\\Temp\\aicca_uploads/**)",
      "Bash(/mnt/c/Users/q9951/anaconda3/python.exe -c \"import cv2; print(''OpenCV version:'', cv2.__version__)\")",
      "WebSearch",
      "Bash(npx shadcn@latest add:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run dev:*)",
      "Bash(set DBRHEO_DEBUG_LEVEL=ERROR)",
      "Bash(set DBRHEO_DEBUG_VERBOSITY=MINIMAL)",
      "Read(/C:\\mnt\\c\\Users\\q9951\\Desktop\\AAHackson03\\AICCA\\packages/**)",
      "Read(/C:\\mnt\\c\\Users\\q9951\\Desktop\\AAHackson03/**)",
      "Bash(/mnt/c/Users/q9951/anaconda3/python.exe -c \"\nimport sys\nsys.path.insert(0, ''C:/Users/q9951/Desktop/AAHackson03/AICCA/packages/core/src'')\nfrom dbrheo.types.tool_types import ToolResult\n\n# 创建一个示例ToolResult\nresult = ToolResult(\n    summary=''检测到deepfake特征'',\n    llm_content={''detection'': ''positive'', ''confidence'': 0.95},\n    return_display=''发现面部替换痕迹''\n)\n\n# 检查对象类型\nprint(f''Type: {type(result)}'')\nprint(f''Class name: {result.__class__.__name__}'')\nprint(f''Has ToolResult in name: {\"\"ToolResult\"\" in str(type(result))}'')\nprint(f''isinstance check: {isinstance(result, ToolResult)}'')\nprint(f''llm_content type: {type(result.llm_content)}'')\n\")",
      "Bash(C:Usersq9951anaconda3python.exe -c \"import sys; sys.path.insert(0, ''packages/core/src''); from dbrheo.types.tool_types import ToolResult; result = ToolResult(summary=''test'', llm_content={''data'': ''test''}, return_display=''display''); print(f''Type: {type(result)}''); print(f''Class: {result.__class__.__name__}''); print(f''llm_content type: {type(result.llm_content)}'')\")",
      "Bash(C:Usersq9951anaconda3python.exe -c \"import subprocess; result = subprocess.run([''ffmpeg'', ''-version''], capture_output=True, text=True); print(''returncode:'', result.returncode); print(''stdout:'', result.stdout[:100] if result.stdout else ''None''); print(''stderr:'', result.stderr[:100] if result.stderr else ''None'')\")",
      "Bash(cmd.exe /c \"where ffmpeg\")",
      "Bash(ffmpeg:*)",
      "Bash(/mnt/c/Users/q9951/anaconda3/Scripts/pip.exe list)",
      "Bash(pip uninstall:*)",
      "Bash(cmd /c:*)",
      "Bash(pip cache:*)",
      "WebFetch(domain:ui.shadcn.com)"
    ],
    "deny": [],
    "additionalDirectories": [
      "C:\\Users\\q9951\\AppData\\Local\\Temp\\aicca_uploads"
    ]
  }
}